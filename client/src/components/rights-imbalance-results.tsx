import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Scale, AlertTriangle, CheckCircle, Users } from "lucide-react";
import type { RightsImbalance } from "@shared/schema";

interface RightsImbalanceResultsProps {
  rightsImbalance: RightsImbalance[];
}

export function RightsImbalanceResults({ rightsImbalance }: RightsImbalanceResultsProps) {
  if (rightsImbalance.length === 0) {
    return (
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Scale className="h-5 w-5 text-green-600" />
            –î–∏—Å–±–∞–ª–∞–Ω—Å –ø—Ä–∞–≤ —Å—Ç–æ—Ä–æ–Ω
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="flex items-center gap-2 text-green-600">
            <CheckCircle className="h-5 w-5" />
            <span>–ö—Ä–∏—Ç–∏—á–Ω—ã–π –¥–∏—Å–±–∞–ª–∞–Ω—Å –ø—Ä–∞–≤ –º–µ–∂–¥—É —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω</span>
          </div>
        </CardContent>
      </Card>
    );
  }

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'high': return 'bg-red-100 text-red-800 border-red-200';
      case 'medium': return 'bg-yellow-100 text-yellow-800 border-yellow-200';
      case 'low': return 'bg-blue-100 text-blue-800 border-blue-200';
      default: return 'bg-gray-100 text-gray-800 border-gray-200';
    }
  };

  const getTypeIcon = (type: string) => {
    switch (type) {
      case 'termination_rights': return 'üîö';
      case 'suspension_rights': return '‚è∏Ô∏è';
      case 'modification_rights': return '‚úèÔ∏è';
      case 'refusal_rights': return '‚ùå';
      case 'control_rights': return 'üîç';
      default: return '‚öñÔ∏è';
    }
  };

  const getTypeName = (type: string) => {
    switch (type) {
      case 'termination_rights': return '–ü—Ä–∞–≤–∞ —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏—è';
      case 'suspension_rights': return '–ü—Ä–∞–≤–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∏';
      case 'modification_rights': return '–ü—Ä–∞–≤–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è';
      case 'refusal_rights': return '–ü—Ä–∞–≤–∞ –æ—Ç–∫–∞–∑–∞';
      case 'control_rights': return '–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞';
      default: return '–î—Ä—É–≥–∏–µ –ø—Ä–∞–≤–∞';
    }
  };

  const totalBuyerRights = rightsImbalance.reduce((sum, item) => sum + item.buyerRights, 0);
  const totalSupplierRights = rightsImbalance.reduce((sum, item) => sum + item.supplierRights, 0);

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Scale className="h-5 w-5 text-amber-600" />
          –î–∏—Å–±–∞–ª–∞–Ω—Å –ø—Ä–∞–≤ —Å—Ç–æ—Ä–æ–Ω
          <Badge variant="outline" className="ml-auto">
            {rightsImbalance.length} –¥–∏—Å–±–∞–ª–∞–Ω—Å{rightsImbalance.length > 1 ? '–æ–≤' : ''}
          </Badge>
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        {/* –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg">
          <div className="text-center">
            <div className="text-2xl font-bold text-blue-600">{totalBuyerRights}</div>
            <div className="text-sm text-gray-600">–ü—Ä–∞–≤–∞ –ü–æ–∫—É–ø–∞—Ç–µ–ª—è</div>
          </div>
          <div className="text-center">
            <div className="text-2xl font-bold text-green-600">{totalSupplierRights}</div>
            <div className="text-sm text-gray-600">–ü—Ä–∞–≤–∞ –ü–æ—Å—Ç–∞–≤—â–∏–∫–∞</div>
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ –¥–∏—Å–±–∞–ª–∞–Ω—Å–æ–≤ */}
        <div className="space-y-3">
          {rightsImbalance.map((imbalance) => (
            <div
              key={imbalance.id}
              className="border rounded-lg p-4 hover:shadow-md transition-shadow"
            >
              <div className="flex items-start gap-3">
                <div className="text-2xl">{getTypeIcon(imbalance.type)}</div>
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-2">
                    <span className="font-medium">{getTypeName(imbalance.type)}</span>
                    <Badge className={getSeverityColor(imbalance.severity)}>
                      {imbalance.severity === 'high' && '–í—ã—Å–æ–∫–∏–π'}
                      {imbalance.severity === 'medium' && '–°—Ä–µ–¥–Ω–∏–π'}
                      {imbalance.severity === 'low' && '–ù–∏–∑–∫–∏–π'}
                    </Badge>
                  </div>
                  
                  <p className="text-gray-700 mb-3">{imbalance.description}</p>
                  
                  {/* –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤ */}
                  <div className="grid grid-cols-2 gap-4 mb-3 text-sm">
                    <div className="flex items-center gap-2">
                      <Users className="h-4 w-4 text-blue-500" />
                      <span>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: </span>
                      <Badge variant="outline" className="text-blue-600">
                        {imbalance.buyerRights}
                      </Badge>
                    </div>
                    <div className="flex items-center gap-2">
                      <Users className="h-4 w-4 text-green-500" />
                      <span>–ü–æ—Å—Ç–∞–≤—â–∏–∫: </span>
                      <Badge variant="outline" className="text-green-600">
                        {imbalance.supplierRights}
                      </Badge>
                    </div>
                  </div>
                  
                  {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è */}
                  <div className="bg-blue-50 border-l-4 border-blue-400 p-3 rounded">
                    <div className="flex items-start gap-2">
                      <AlertTriangle className="h-4 w-4 text-blue-600 mt-0.5" />
                      <div className="text-sm text-blue-800">
                        <span className="font-medium">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: </span>
                        {imbalance.recommendation}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* –û–±—â–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è */}
        {rightsImbalance.length > 0 && (
          <div className="mt-4 p-4 bg-amber-50 border border-amber-200 rounded-lg">
            <div className="flex items-start gap-2">
              <Scale className="h-5 w-5 text-amber-600 mt-0.5" />
              <div className="text-sm text-amber-800">
                <span className="font-medium">–û–±—â–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: </span>
                –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±–æ–ª–µ–µ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∞–≤ –º–µ–∂–¥—É —Å—Ç–æ—Ä–æ–Ω–∞–º–∏. 
                –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π –¥–∏—Å–±–∞–ª–∞–Ω—Å –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–∞–≤–æ–≤—ã–µ —Ä–∏—Å–∫–∏ –∏ –ø–æ–≤—ã—à–∞—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–ø–æ—Ä–æ–≤.
              </div>
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  );
} 